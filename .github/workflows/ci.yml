name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
defaults:
  run:
    shell: pwsh
jobs:
  build:
    name: ${{ matrix.os-name }}-${{ matrix.framework }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2019, ubuntu-20.04 ]
        framework: [ net8.0, net7.0, net6.0, net481 ]
        include:
          - os: windows-2019
            os-name: Windows
          - os: ubuntu-20.04
            os-name: Linux
        exclude:
          - os: ubuntu-20.04
            framework: net481
      fail-fast: false
    steps:
      - name: Check for secrets
        env:
          SECRETS_AVAILABLE: ${{ secrets.SECRETS_AVAILABLE }}
        run: exit $(If ($env:SECRETS_AVAILABLE -eq 'true') { 0 } Else { 1 })
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: |
            8.0.x
            7.0.x
            6.0.x
          include-prerelease: true
      - name: Build
        run: dotnet build src --configuration Release
      - name: Upload packages
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4.3.1
        with:
          name: NuGet packages
          path: nugets/
          retention-days: 7
          overwrite: true
      - name: Azure login
        uses: azure/login@v2.0.0
        with:
          creds: ${{ secrets.AZURE_ACI_CREDENTIALS }}
      - name: Setup Azure Service Bus
        uses: Particular/setup-azureservicebus-action@v1.2.0
        with:
          connection-string-name: AzureServiceBus_ConnectionString
          tag: ASBTransport
      - name: Run tests
        uses: Particular/run-tests-action@v1.7.0
        with:
          framework: ${{ matrix.framework }}
